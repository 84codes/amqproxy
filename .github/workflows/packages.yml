name: Build packages
on:
  push:
    branches:
      - master
    tags:
      - 'v*'

jobs:
  tar:
    runs-on: ubuntu-latest
    container:
      image: 84codes/crystal:latest-alpine
    steps:
      - uses: actions/checkout@v3
      - name: Install Dependencies
        run: shards install --production
      - name: Build
        run:  build/tar 1
      - name: Upload github artifact
        uses: actions/upload-artifact@v3
        with:
          path: '*.tar.gz'
          name: tar

  deb:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: ['ubuntu-focal', 'ubuntu-bionic', 'debian-buster', 'debian-bullseye']
        arch: ['amd64', 'arm64']
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build deb package
        uses: docker/build-push-action@v3
        with:
          cache-from: type=gha
          cache-to: type=gha,mode=max
          file: deb.dockerfile
          platforms: ${{ matrix.arch }}
          build-args: |
            image=84codes/crystal:latest-${{ matrix.os }}
          outputs: builds

      - name: Upload GitHub artifact
        uses: actions/upload-artifact@v3
        with:
          path: 'builds/**/*.deb'
          name: debs

      - name: Upload to PackageCloud
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          cat > ~/.curlrc << EOF
          fail
          silent
          show-error
          user ${{ secrets.PACKAGECLOUD_TOKEN }}:
          EOF
          . /etc/os-release
          curl -O https://packagecloud.io/api/v1/distributions.json
          dist_id=$(jq ".deb[] | select(.index_name == \"${ID}\").versions[] | select(.index_name == \"${VERSION_CODENAME}\").id" distributions.json)
          debfile=$(find builds -name '*.deb' | tail -1)
          curl -XPOST https://packagecloud.io/api/v1/repos/cloudamqp/amqproxy/packages.json \
            -F "package[distro_version_id]=${dist_id}" \
            -F "package[package_file]=@${debfile}"
