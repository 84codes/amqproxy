name: Build packages
on:
  push:
    branches:
      - master
    tags:
      - 'v*'

jobs:
  static:
    name: Static
    runs-on: ubuntu-latest
    container:
      image: 84codes/crystal:latest-alpine
    steps:
      - uses: actions/checkout@v3
      - name: Install Dependencies
        run: shards install --production
      - name: Build
        run:  build/tar 1
      - name: Upload github artifact
        uses: actions/upload-artifact@v3
        with:
          path: '*.tar.gz'
          name: tar

  deb:
    name: Deb
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image: ['ubuntu-focal', 'ubuntu-bionic', 'debian-buster', 'debian-bullseye']
      fail-fast: false
    container:
      image: 84codes/crystal:latest-${{ matrix.image }}
    steps:
      - name: Install dependencies
        run: |
          apt-get update
          env DEBIAN_FRONTEND=noninteractive apt-get install -y libsystemd-dev dpkg fakeroot help2man lintian curl jq

      - name: Checkout
        uses: actions/checkout@v3

      - name: Build deb package
        run: build/deb

      - name: Test start
        run: bin/amqproxy --version

      - name: Upload to PackageCloud
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          cat > ~/.curlrc << EOF
          fail
          silent
          show-error
          user ${{ secrets.PACKAGECLOUD_TOKEN }}:
          EOF
          . /etc/os-release
          curl -O https://packagecloud.io/api/v1/distributions.json
          dist_id=$(jq ".deb[] | select(.index_name == \"${ID}\").versions[] | select(.index_name == \"${VERSION_CODENAME}\").id" distributions.json)
          debfile=$(find builds -name '*.deb' | tail -1)
          curl -XPOST https://packagecloud.io/api/v1/repos/cloudamqp/amqproxy/packages.json \
            -F "package[distro_version_id]=${dist_id}" \
            -F "package[package_file]=@${debfile}"

      - name: Upload github artifact
        uses: actions/upload-artifact@v3
        with:
          path: 'builds/**/*.deb'
          name: debs
