name: Build packages
on:
  push:
    branches:
      - master

jobs:
  static:
    name: Static
    runs-on: ubuntu-latest
    container:
      image: crystallang/crystal:latest-alpine
    steps:
      - uses: actions/checkout@v2
      - name: Install Dependencies
        run: shards install --production
      - name: Build
        run:  build/tar 1
      - name: Upload github artifact
        uses: actions/upload-artifact@v2
        with:
          path: '*.tar.gz'
          name: tar

  deb:
    name: Deb
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        image: ['ubuntu:focal', 'ubuntu:bionic', 'debian:buster']
    container:
      image: ${{ matrix.image }}
    steps:
      - run: apt-get update

      - name: Install dependencies
        run: env DEBIAN_FRONTEND=noninteractive apt-get install -y libsystemd-dev dpkg fakeroot help2man lintian build-essential gcc pkg-config git tzdata libpcre3-dev libevent-dev libyaml-dev libgmp-dev libssl-dev libxml2-dev

      - name: Install Crystal
        run: |
          wget https://crystal-lang.org/install.sh
          chmod +x install.sh
          ./install.sh --crystal=1.1

      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Build deb package
        run: build/deb

      - name: Test start
        run: bin/amqproxy --version

      - name: Upload github artifact
        uses: actions/upload-artifact@v2
        with:
          path: builds/debian/**
          name: deb

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '2.7'

      - name: Install packagecloud cli
        run: gem install package_cloud

      - name: Get Ubuntu release name
        run: echo "CODENAME=$(lsb_release -cs)" >> $GITHUB_ENV

      - name: Get version
        run: echo "VERSION=$(shards version)" >> $GITHUB_ENV

      - name: Get arch
        run: echo "ARCH=$(dpkg --print-architecture)" >> $GITHUB_ENV

      - name: Upload to packagecloud release repo
        run: package_cloud push cloudamqp/amqproxy/ubuntu/${{ env.CODENAME }} builds/debian/${{ env.CODENAME }}/amqproxy_${{ env.VERSION }}-1_${{ env.ARCH }}.deb
        env:
          PACKAGECLOUD_TOKEN: ${{ secrets.PACKAGECLOUD_TOKEN }}
